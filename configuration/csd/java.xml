<?xml version="1.0" encoding="UTF-8"?>
<csd>

   <!-- as per http://java.sun.com/javase/6/docs/platform/serialization/spec/protocol.html
-->

   <sequence name="Stream">
      <short name="magic" value="0xACED"/>
      <short name="version" value="0x0005"/>
      <reference to="Contents"/>
   </sequence>

   <choice name="BlockData">
      <reference to="BlockDataShort"/>
      <reference to="BlockDataLong"/>
   </choice>

   <sequence name="BlockDataShort">
      <byte name="tcBlockData" value="0x77"/>
      <byte name="size"/>
      <sequence-of name="Data" size="ancestor::BlockDataShort/size/@value">
         <byte name="byte"/>
      </sequence-of>
   </sequence>

   <sequence name="BlockDataLong">
      <byte name="tcBlockDataLong" value="0x7A"/>
      <int name="size"/>
      <sequence-of name="Data" size="ancestor::BlockDataLong/size/@value">
         <byte name="byte"/>
      </sequence-of>
   </sequence>

   <choice name="ClassAnnotation">
      <byte name="endBlockData" value="0x78"/>
      <sequence name="NonEmptyContents">
         <reference to="Contents"/>
         <byte name="endBlockData" value="0x78"/>
      </sequence>
   </choice>

   <!-- data about the NormalClassDesc in $context -->
   <choice name="ClassData">
      <variable name="flags" select="$context/ClassDescInfo/classDescFlags/@value"/>
      <variable name="name" select="$context/className/@value"/>
      <reference to="Values" if="$flags eq '2'"/>
      <reference to="HashMap" if="$flags eq '3' and $name eq 'java.util.HashMap'"/>
      <error/>
   </choice>

   <choice name="ClassDesc">
      <reference to="NewClassDesc"/>
      <byte name="nullReference" value="0x70"/>
      <reference to="PrevObject"/>
   </choice>

   <sequence name="ClassDescInfo">
      <byte name="classDescFlags"/>
      <reference to="Fields"/>
      <reference to="ClassAnnotation"/>
      <reference to="ClassDesc"/>
   </sequence>

   <choice name="Content">
      <reference to="Object"/>
      <reference to="BlockData"/>
   </choice>

   <sequence-of name="Contents">
      <reference to="Content"/>
   </sequence-of>

   <sequence name="Exception">
      <byte name="tcException" value="0x7B"/>
      <reference name="object" to="UTF8String"/>
   </sequence>

   <sequence name="Fields">
      <short name="count"/>
      <sequence-of name="FieldSequence" size="ancestor::Fields/count/@value">
         <reference to="FieldDesc"/>
      </sequence-of>
   </sequence>

   <choice name="FieldDesc">
      <reference to="PrimitiveDesc"/>
      <reference to="ObjectDesc"/>
   </choice>

   <!-- java.util.HashMap has a readObject function. -->
   <sequence name="HashMap">
      <!-- first we read its field values. -->
      <reference to="Values"/>

      <!-- a short block of 8 bytes -->
      <byte name="ShortBlock" value="0x77"/>
      <byte name="BlockSize" value="8"/>

      <!-- then the number of buckets -->
      <int name="numBuckets"/>

      <!-- the number of mappings a.k.a size -->
      <int name="size"/>

      <sequence-of name="Entries" size="ancestor::HashMap/size/@value">
         <sequence name="Entry">
            <!-- key -->
            <reference to="Object"/>

            <!-- value -->
            <reference to="Object"/>
         </sequence>
      </sequence-of>
   </sequence>

   <sequence name="NewArray">
      <byte name="tcArray" value="0x75"/>
      <reference to="ClassDesc"/>
      <int name="size"/>
      <variable name="size" select="size/@value" as="NUMBER"/>
      <variable name="classType" select="ClassDesc/NewClassDesc/NormalClassDesc/className" as="NODE"/>
      <choice name="ArrayValues">
         <sequence-of name="ByteValues" size="$size" if="$classType/@value = '[B'">
            <byte name="ByteValue"/>
         </sequence-of>
         <sequence-of name="CharValues" size="$size" if="$classType/@value = '[C'">
            <char name="CharValue"/>
         </sequence-of>
         <sequence-of name="DoubleValues" size="$size" if="$classType/@value = '[D'">
            <double name="DoubleValue"/>
         </sequence-of>
         <sequence-of name="FloatValues" size="$size" if="$classType/@value = '[F'">
            <float name="FloatValue"/>
         </sequence-of>
         <sequence-of name="IntValues" size="$size" if="$classType/@value = '[I'">
            <int name="IntValue"/>
         </sequence-of>
         <sequence-of name="LongValues" size="$size" if="$classType/@value = '[J'">
            <long name="LongValue"/>
         </sequence-of>
         <sequence-of name="ShortValues" size="$size" if="$classType/@value = '[S'">
            <short name="ShortValue"/>
         </sequence-of>
         <sequence-of name="BooleanValues" size="$size" if="$classType/@value = '[Z'">
            <boolean name="BooleanValue"/>
         </sequence-of>
      </choice>

      <choice name="FieldValue">
         <byte name="byte" if="$context/PrimitiveDesc/PrimitiveTypeCode/byte"/>
         <char name="char" if="$context/PrimitiveDesc/PrimitiveTypeCode/char"/>
         <double name="double" if="$context/PrimitiveDesc/PrimitiveTypeCode/double"/>
         <float name="float" if="$context/PrimitiveDesc/PrimitiveTypeCode/float"/>
         <int name="int" if="$context/PrimitiveDesc/PrimitiveTypeCode/integer"/>
         <long name="long" if="$context/PrimitiveDesc/PrimitiveTypeCode/long"/>
         <short name="short" if="$context/PrimitiveDesc/PrimitiveTypeCode/short"/>
         <boolean name="boolean" if="$context/PrimitiveDesc/PrimitiveTypeCode/boolean"/>

         <reference to="Object" if="$context/ObjectDesc/ObjectTypeCode/object"/>
         <reference to="NewArray" if="$context/ObjectDesc/ObjectTypeCode/array"/>
      </choice>
   </sequence>

   <sequence name="NewClass">
      <byte name="tcClass" value="0x76"/>
      <reference to="ClassDesc"/>
   </sequence>

   <choice name="NewClassDesc">
      <sequence name="NormalClassDesc">
         <byte name="tcClassDesc" value="0x72"/>
         <reference name="className" to="UTF8String"/>
         <long name="serialVersionUID"/>
         <reference to="ClassDescInfo"/>
      </sequence>

      <sequence name="ProxyClassDesc">
         <byte name="tcProxyClassDesc" value="0x7D"/>
         <reference to="ProxyClassDescInfo"/>
      </sequence>
   </choice>

   <sequence name="NewEnum">
      <byte name="tcEnum" value="0x7E"/>
      <reference to="ClassDesc"/>
      <reference name="enumConstantName" to="UTF8String"/>
   </sequence>

   <sequence name="NewObject">
      <byte name="tcObject" value="0x73"/>
      <reference to="ClassDesc"/>

      <!-- for each class read, from superclass to subclass (hence "reverse") -->
      <for-each name="ClassDataArray" select="reverse((parent::node())/descendant::NormalClassDesc)">
         <reference to="ClassData"/>
      </for-each>
   </sequence>

   <choice name="NewString">
      <sequence name="NormalString">
         <byte name="tcString" value="0x74"/>
         <reference name="value" to="UTF8String"/>
      </sequence>

      <sequence name="LongString">
         <byte name="tcLongString" value="0x7C"/>
         <reference name="value" to="LongUTF8String"/>
      </sequence>
   </choice>

   <choice name="Object">
      <reference to="NewArray"/>
      <reference to="NewClass"/>
      <reference to="NewClassDesc"/>
      <reference to="NewEnum"/>
      <reference to="NewObject"/>
      <reference to="NewString"/>
      <reference to="PrevObject"/>
      <byte name="nullReference" value="0x70"/>
      <reference to="Exception"/>
      <byte name="tcReset" value="0x79"/>
   </choice>

   <choice name="ObjectAnnotation">
      <byte name="endBlockData" value="0x78"/>
      <sequence name="NonEmptyContents">
         <reference to="Contents"/>
         <byte name="endBlockData" value="0x78"/>
      </sequence>
   </choice>

   <sequence name="ObjectDesc">
      <reference to="ObjectTypeCode"/>
      <reference name="fieldName" to="UTF8String"/>
      <reference to="NewString"/>
   </sequence>

   <choice name="ObjectTypeCode">
      <byte name="array" value="'['"/>
      <byte name="object" value="'L'"/>
   </choice>

   <sequence name="PrevObject">
      <byte name="tcReference" value="0x71"/>
      <int name="handle"/>
   </sequence>

   <sequence name="PrimitiveDesc">
      <reference to="PrimitiveTypeCode"/>
      <reference name="fieldName" to="UTF8String"/>
   </sequence>

   <choice name="PrimitiveTypeCode">
      <byte name="byte" value="'B'"/>
      <byte name="char" value="'C'"/>
      <byte name="double" value="'D'"/>
      <byte name="float" value="'F'"/>
      <byte name="integer" value="'I'"/>
      <byte name="long" value="'J'"/>
      <byte name="short" value="'S'"/>
      <byte name="boolean" value="'Z'"/>
   </choice>

   <sequence name="ProxyClassDescInfo">
      <int name="count"/>
      <sequence-of name="ProxyFields" size="ancestor::ProxyClassDescInfo/count/@value">
         <reference name="fieldName" to="UTF8String"/>
      </sequence-of>
      <reference to="ClassAnnotation"/>
      <reference to="ClassDesc"/>
   </sequence>

   <!-- field values of NormalClassDesc in $context -->
   <for-each name="Values" select="$context/ClassDescInfo/Fields/FieldSequence/FieldDesc">
      <!-- $context = FieldDesc -->
      <choice name="FieldValue">
         <byte name="byte" if="$context/PrimitiveDesc/PrimitiveTypeCode/byte"/>
         <char name="char" if="$context/PrimitiveDesc/PrimitiveTypeCode/char"/>
         <double name="double" if="$context/PrimitiveDesc/PrimitiveTypeCode/double"/>
         <float name="float" if="$context/PrimitiveDesc/PrimitiveTypeCode/float"/>
         <int name="int" if="$context/PrimitiveDesc/PrimitiveTypeCode/integer"/>
         <long name="long" if="$context/PrimitiveDesc/PrimitiveTypeCode/long"/>
         <short name="short" if="$context/PrimitiveDesc/PrimitiveTypeCode/short"/>
         <boolean name="boolean" if="$context/PrimitiveDesc/PrimitiveTypeCode/boolean"/>

         <reference to="Object" if="$context/ObjectDesc/ObjectTypeCode/object"/>
         <reference to="NewArray" if="$context/ObjectDesc/ObjectTypeCode/array"/>
      </choice>
   </for-each>

   <sequence name="WRClass">
      <reference to="Values"/>
      <reference to="ObjectAnnotation"/>
   </sequence>

</csd>
