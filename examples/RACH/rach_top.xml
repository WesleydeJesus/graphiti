<?xml version="1.0" encoding="UTF-8"?><graphml xmlns="http://graphml.graphdrawing.org/xmlns/1.0rc">
   <key attr.name="graph_desc" attr.type="string" for="node" id="graph_desc">
      <desc>java.lang.String</desc>
   </key>
   <key attr.name="arguments" for="node" id="arguments"/>
   <key attr.name="parameters" for="graph" id="parameters"/>
   <key attr.name="variables" for="graph" id="variables"/>
   <key attr.name="edge_prod" attr.type="int" for="edge" id="edge_prod">
      <desc>org.sdf4j.model.sdf.SDFDefaultEdgePropertyType</desc>
   </key>
   <key attr.name="edge_delay" attr.type="int" for="edge" id="edge_delay">
      <desc>org.sdf4j.model.sdf.SDFDefaultEdgePropertyType</desc>
   </key>
   <key attr.name="edge_cons" attr.type="int" for="edge" id="edge_cons">
      <desc>org.sdf4j.model.sdf.SDFDefaultEdgePropertyType</desc>
   </key>
   <graph edgedefault="directed">
      <data key="parameters"/>
      <data key="variables">
         <variable name="AntennaNr" value="4"/>
         <variable name="CPSize" value="21012"/>
         <variable name="CircNrPerRoot" value="1"/>
         <variable name="DFTSize" value="1536"/>
         <variable name="FIRSize" value="128"/>
         <variable name="IFFTSize" value="1024"/>
         <variable name="NumSigs" value="64"/>
         <variable name="RelNFThres" value="5"/>
         <variable name="RelPreambleThresShift11" value="24757"/>
         <variable name="RepFactor" value="2"/>
         <variable name="RootNr" value="64"/>
         <variable name="RootSize" value="839"/>
         <variable name="TSNr" value="24576"/>
         <variable name="circbufsize" value="0"/>
         <variable name="dec" value="0"/>
      </data>
      <node id="FIRGen" kind="vertex">
         <data key="graph_desc">FIRGen</data>
         <data key="arguments">
            <argument name="FIRSize" value="FIRSize"/>
         </data>
      </node>
      <node id="DFTInit" kind="vertex">
         <data key="graph_desc"/>
         <data key="arguments"/>
      </node>
      <node id="ZCGen" kind="vertex">
         <data key="graph_desc"/>
         <data key="arguments"/>
      </node>
      <node id="IFFTTwiddleGen" kind="vertex">
         <data key="graph_desc"/>
         <data key="arguments"/>
      </node>
      <node id="RotationVectorGen" kind="vertex">
         <data key="graph_desc"/>
         <data key="arguments"/>
      </node>
      <node id="AntennaGen" kind="vertex">
         <data key="graph_desc"/>
         <data key="arguments"/>
      </node>
      <node id="RACHDecoding" kind="vertex">
         <data key="graph_desc">rach_decoding</data>
         <data key="arguments"/>
      </node>
      <node id="FinalPowerAcc" kind="vertex">
         <data key="graph_desc"/>
         <data key="arguments"/>
      </node>
      <node id="NoiseFloorThreshold" kind="vertex">
         <data key="graph_desc"/>
         <data key="arguments"/>
      </node>
      <node id="PeakSearch" kind="vertex">
         <data key="graph_desc"/>
         <data key="arguments"/>
      </node>
      <edge source="AntennaGen" sourceport="antennaOutputs" target="RACHDecoding" targetport="antennaInputs">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="AntennaGen" sourceport="RepetitionIndex" target="RACHDecoding" targetport="RepetitionIndex">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="FIRGen" sourceport="FIRTaps" target="RACHDecoding" targetport="FIRTaps">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="DFTInit" sourceport="dfTwiddle" target="RACHDecoding" targetport="dftState">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="ZCGen" sourceport="ZCCodes" target="RACHDecoding" targetport="inputZC1">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="ZCGen" sourceport="ZCIndex" target="RACHDecoding" targetport="ZCIndex">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="IFFTTwiddleGen" sourceport="twiddle" target="RACHDecoding" targetport="twiddle">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="RotationVectorGen" sourceport="rotationvector" target="RACHDecoding" targetport="rotationvector">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="RACHDecoding" sourceport="powerValues" target="FinalPowerAcc" targetport="inputPowerValues">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="RACHDecoding" sourceport="SumPower" target="FinalPowerAcc" targetport="inputSumPowers">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="FinalPowerAcc" sourceport="outputPowerValues" target="NoiseFloorThreshold" targetport="powerValues">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="FinalPowerAcc" sourceport="outputSumPower" target="NoiseFloorThreshold" targetport="SumPower">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="FinalPowerAcc" sourceport="outputPowerValues" target="PeakSearch" targetport="powerSequences">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
      <edge source="NoiseFloorThreshold" sourceport="NFThreshold" target="PeakSearch" targetport="NFThreshold">
         <data key="edge_prod">0</data>
         <data key="edge_delay">0</data>
         <data key="edge_cons">0</data>
      </edge>
   </graph>
</graphml>
